(()=>{"use strict";var t={842:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BlockDeviceInfo=void 0;const o=s(718);function i(t){return new Promise(((e,s)=>{(0,o.exec)(t,{},((t,o,i)=>{t?s(new Error(i)):e({stdout:o,stderr:i})}))}))}class r{get name(){return this._name}get size(){return this._size}get path(){return this._path}get sn(){return this._sn}constructor(){}static parseDiskutilList(t){return[...t.matchAll(/^(\/.+?) .*physical.*/gm)].map((t=>t[1]))}parseDiskutilInfo(t){let e=t.match(/device \/ media name: +(.*?)$/im);e&&(this._name=e[1]),e=t.match(/disk size: +(.*?)$/im),e&&(this._size=Number(e[1].replace(/.*\((\d+) Bytes\).*/,"$1"))),e=t.match(/device node: +(.*?)$/im),e&&(this._path=e[1])}parseLsblkInfo(t){let e=t.match(/NAME="(.*?)"/);e&&(this._path=e[1]),e=t.match(/SIZE="(\d+)"/),e&&(this._size=Number(e[1])),e=t.match(/MODEL="(.*?)"/),e&&(this._name=e[1]),e=t.match(/SERIAL="(.*?)"/),e&&(this._sn=e[1])}parseWinDiskDrive(t){let e=t.match(/DeviceID +: +(.*?)$/m);e&&(this._path=e[1]),e=t.match(/Size +: +(.*?)$/m),e&&(this._size=Number(e[1])),e=t.match(/Model +: +(.*?)$/m),e&&(this._name=e[1]),e=t.match(/SerialNumber +: +(.*?)$/m),e&&(this._sn=e[1])}static async load(t){const e=new r;if("linux"===process.platform){const{stdout:s}=await i("lsblk -bdPpo NAME,SIZE,MODEL,SERIAL "+t);e.parseLsblkInfo(s)}else if("darwin"===process.platform){const{stdout:s}=await i("diskutil info "+t);e.parseDiskutilInfo(s)}else{if("win32"!==process.platform)throw new Error("Unsupported platform: "+process.platform);{let{stdout:s}=await i("powershell.exe -Command \"Get-WmiObject -Class Win32_diskdrive | Where-Object -Property DeviceID -EQ '"+t+"' | Select-Object -Property DeviceID, Model, Size, SerialNumber | fl\"");if(s=s.trim(),!s)throw new Error("Device not found!");e.parseWinDiskDrive(s)}}const s=["name","path","size"].find((t=>void 0===e[t]));if(s)throw new Error("Failed to parse block device info: found no "+s);return e}static async loadAll(){if("linux"===process.platform){const{stdout:t}=await i("lsblk -bdPpo NAME,SIZE,MODEL,SERIAL");return t.split("\n").filter((t=>t.trim())).map((t=>{const e=new r;return e.parseLsblkInfo(t),e})).filter((t=>!t.path.startsWith("/dev/loop")))}if("darwin"===process.platform){const{stdout:t}=await i("diskutil list"),e=r.parseDiskutilList(t),s=[];for(const t of e){const e=await r.load(t);s.push(e)}return s}if("win32"===process.platform){const{stdout:t}=await i('powershell.exe -Command "Get-WmiObject -Class Win32_diskdrive | Select-Object -Property DeviceID, Model, Size, SerialNumber | fl"');return t.split("\r\n\r\n").filter((t=>t.trim())).map((t=>{const e=new r;return e.parseWinDiskDrive(t),e}))}throw new Error("Unsupported platform: "+process.platform)}}e.BlockDeviceInfo=r},873:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BlockDeviceTest=void 0;const o=s(977),i=s(561),r=s(673),n=s(906),a=s(385);class c extends r.EventEmitter{constructor(t,e){if(super(),this.bdInfo=t,this.options=e?{...e}:{},void 0===this.options.ioChunkSize&&(this.options.ioChunkSize=4194304),void 0===this.options.startAt&&(this.options.startAt=0),void 0===this.options.openMode&&(this.options.openMode="linux"===process.platform||"darwin"===process.platform?"direct":"win32"===process.platform?"dsync":"normal"),"direct"===this.options.openMode&&this.options.ioChunkSize%512!=0)throw new Error("Chunk size must be multiple of 512 in direct mode!");if("direct"===this.options.openMode&&this.options.startAt%512!=0)throw new Error("Start offset must be multiple of 512 in direct mode!");if(this.testSize=this.bdInfo.size,this.testSize=this.testSize-this.options.startAt,"direct"===this.options.openMode){const t=this.testSize%512;if(t>0){const e=this.testSize;this.testSize-=t,console.log("* Size of",e,"B is not aligned to 512 B."),console.log("* Only",this.testSize,"B will be processed!"),console.log("* Alternatively use non-direct mode."),console.log()}}}async getAlignedBuffer(t){const e=Buffer.allocUnsafe(t+511),s=await(0,o.open)(this.bdInfo.path,i.constants.O_RDONLY|i.constants.O_DIRECT);try{for(let o=0;o<512;o++){try{await s.read(e,o,t)}catch(t){if("EINVAL"===t.code)continue;throw t}return e.subarray(o,o+t)}throw new Error("Buffer alignment not found!")}finally{await s.close()}}async open(t){this.ioBuffer||(this.ioBuffer="direct"===this.options.openMode?await this.getAlignedBuffer(this.options.ioChunkSize):Buffer.allocUnsafe(this.options.ioChunkSize));const e="direct"===this.options.openMode?i.constants.O_DIRECT:"dsync"===this.options.openMode?i.constants.O_DSYNC:0;return(0,o.open)(this.bdInfo.path,("readwrite"===t?i.constants.O_RDWR:"read"===t?i.constants.O_RDONLY:i.constants.O_WRONLY)|e)}async writeTestData(t){const e=await this.open("write");try{let s=this.options.startAt,o=this.testSize;for(;o>0;){const i=Math.min(o,this.options.ioChunkSize);t.fillBuffer(this.ioBuffer,i),await e.write(this.ioBuffer,0,i,s),this.emit("bytes-processed",i),o-=i,s+=i}}finally{await e.close()}}async readTestData(t){const e=await this.open("read");try{let s=this.options.startAt,o=this.testSize;for(;o>0;){const i=Math.min(o,this.options.ioChunkSize);await e.read(this.ioBuffer,0,i,s),t.verify(this.ioBuffer,i),this.emit("bytes-processed",i),o-=i,s+=i}}finally{await e.close()}}async crossTestData(t,e,s){const o=t.map((t=>({dataProvider:t,dataVerifier:n.RepeatedPatternDataVerifier.create(t)}))),i=await this.open("readwrite");try{let t=this.options.startAt,r=this.testSize;for(;r>0;){const n=Math.min(r,s),c=Math.ceil(n/this.options.ioChunkSize),l=`${t} B - ${t+n} B  (${(0,a.formatSize)(t)} - ${(0,a.formatSize)(t+n)})`;let h=0;for(const s of o){const o=e[h];this.emit("state",`Writing ${s.dataProvider.pattern} to ${l} using ${o.name} jumps`);for(let e=0;e<c;e++){const r=o.getJump(c,e)*this.options.ioChunkSize,a=Math.min(n-r,this.options.ioChunkSize);s.dataProvider.fillBuffer(this.ioBuffer,a),await i.write(this.ioBuffer,0,a,t+r),this.emit("bytes-processed",a)}this.emit("state",`Reading ${s.dataProvider.pattern} from ${l} using ${o.name} jumps`);for(let e=0;e<c;e++){const r=o.getJump(c,e)*this.options.ioChunkSize,a=Math.min(n-r,this.options.ioChunkSize);await i.read(this.ioBuffer,0,a,t+r),s.dataVerifier.verify(this.ioBuffer,a),this.emit("bytes-processed",a)}h=(h+1)%e.length}r-=n,t+=n}}finally{await i.close()}}}e.BlockDeviceTest=c},565:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CliArgs=e.InvalidOptionArgumentError=e.InvalidPositionalArgumentError=e.InvalidPositionalArgumentsError=e.NotInModeAvailableError=e.UnknownModeError=e.CliArgsError=void 0;class s extends Error{constructor(t){super(t),Object.setPrototypeOf(this,new.target.prototype)}}e.CliArgsError=s;class o extends s{constructor(t,e){super(`Unknown mode ${e||"N/A"}! Use one of the following modes: ${t.join(", ")}`),Object.setPrototypeOf(this,new.target.prototype)}}e.UnknownModeError=o;class i extends s{constructor(t,e){super(`Trying to access ${t} ${e} which is not available in current mode!`),Object.setPrototypeOf(this,new.target.prototype)}}e.NotInModeAvailableError=i;class r extends s{constructor(t){super(t),Object.setPrototypeOf(this,new.target.prototype)}}e.InvalidPositionalArgumentsError=r;class n extends s{constructor(t){super(t),Object.setPrototypeOf(this,new.target.prototype)}}e.InvalidPositionalArgumentError=n;class a extends s{constructor(t){super(t),Object.setPrototypeOf(this,new.target.prototype)}}e.InvalidOptionArgumentError=a,e.CliArgs=class{get mode(){return this._mode}constructor(t){this.config=t,this.positionals={},this.options={}}parse(t=process.argv.slice(2)){t=t.slice();const e=Object.keys(this.config),{positionals:s,options:i}=this.normalizeArgs(t),c=s.length?s.shift():"";if(!e.includes(c))throw new o(e,c);this._mode=c;const l=Object.keys(this.config[c].positionals||[]).map((t=>Number(t)));if(l.length>s.length){l.sort();const t=l.map((t=>this.config[c].positionals[t].name)).slice(s.length);throw new r(`Missing argument(s): ${t.join(", ")}`)}if(l.length<s.length){const t=s.slice(l.length);throw new r(`Expected ${l.length} arguments, but got ${s.length}. These are too much: \n${t}`)}this.positionals[c]={},this.options[c]={};for(let t=0;t<l.length;t++){const e=this.config[c].positionals[t].parse(s[t]);if(this.config[c].positionals[t].validate){const s=this.config[c].positionals[t].validate(e);if(s)throw new n(s)}this.positionals[c][t]=e}const h=Object.keys(this.config[c].options);for(;i.length>0;){const t=i.shift(),e=t.indexOf("="),s=t.substring(0,e);let o=t.substring(e+1);const r=h.find((t=>s==="--"+t||s==="-"+this.config[c].options[t].short));if(!r)throw new a('Unknown option "'+s+'"');if(this.config[c].options[r].parse&&(o=this.config[c].options[r].parse(o)),this.config[c].options[r].validate){const t=this.config[c].options[r].validate(o);if(t)throw new a(t)}this.options[c][r]=o}for(const t of h){const e=this.config[c].options[t];void 0===this.options[c][t]&&e.default&&(this.options[c][t]="function"==typeof e.default?e.default():e.default)}}normalizeArgs(t){const e=[],s=[];let o=!1;for(;t.length;){let i=t.shift();o?(s[s.length-1]=s[s.length-1]+i,o=!1):i.startsWith("-")?(i.includes("=")||(i+="=",o=!0),s.push(i)):e.push(i)}return{positionals:e,options:s}}getOption(t,e){if(void 0===this._mode||this._mode!==t)throw new i("option",e.toString());return this.options[t][e]}getPosition(t,e){if(void 0===this._mode||this._mode!==t)throw new i("positional argument",e.toString());return this.positionals[t][e]}}},915:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.MS_1000=e.MS_100=void 0,e.MS_100=100000000n,e.MS_1000=1000000000n},385:(t,e)=>{function s(t){return t.length<2?("00"+t).slice(-2):t}function o(t){let e=t+"",s=e.indexOf(".");return s<0&&(s=e.length,e+="."),e+="00",e.substring(0,s+3)}Object.defineProperty(e,"__esModule",{value:!0}),e.formatSize=e.padLeftDecimal=e.twoDecimalPlaces=e.formatTime=e.zeroPaddedTwoDigit=void 0,e.zeroPaddedTwoDigit=s,e.formatTime=function(t){if(isNaN(t))return"??d ??h ??m ??s";let e="";if(t>=86400){const o=Math.floor(t/86400);e+=s(o+""),t-=86400*o}else e+="00";if(e+="d ",t>=3600){const o=Math.floor(t/3600);e+=s(o+""),t-=3600*o}else e+="00";if(e+="h ",t>=60){const o=Math.floor(t/60);e+=s(o+""),t-=60*o}else e+="00";return e+="m ",e+=s(t+""),e+="s",e},e.twoDecimalPlaces=o,e.padLeftDecimal=function(t,e){let s=t.indexOf(".");return s<0&&(s=1),s<e&&(t=" ".repeat(e-s)+t),t},e.formatSize=function(t){let e=1,s="B";return t>=1e9?(e=1073741824,s="GiB"):t>=1e6?(e=1048576,s="MiB"):t>=1e3&&(e=1024,s="KiB"),o(t/e)+" "+s}},470:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BafJumps=void 0,e.BafJumps=class{constructor(){this.name="BAF"}getJump(t,e){if(!(e>=t||e<0))return e%2==0?Math.floor(e/2):Math.ceil(t/2)+Math.floor(e/2)}}},100:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Log2Jumps=void 0,e.Log2Jumps=class{constructor(){this.name="Log2",this.precalcResults=new Map}getJump(t,e){if(e>=t||e<0)return;if(1===t)return 0;if(!this.precalcResults.has(t)){const e=Math.round(Math.log2(t)),s=Math.ceil(t/e),o=s-1,i=t-e*(s-1),r=i*s;this.precalcResults.set(t,{jumpSize:e,numbersPerBigRound:s,numbersPerSmallRound:o,bigRounds:i,numbersInAllBigRounds:r})}const s=this.precalcResults.get(t);return e<=s.numbersInAllBigRounds?Math.floor(e/s.numbersPerBigRound)+e%s.numbersPerBigRound*s.jumpSize:(e-=s.numbersInAllBigRounds,s.bigRounds+Math.floor(e/s.numbersPerSmallRound)+e%s.numbersPerSmallRound*s.jumpSize)}}},24:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Main=e.AbortedError=e.CrossTestError=e.ReadTestError=e.WriteTestError=e.UnsupportedNodeVersionError=e.UnsupportedPlatformError=void 0;const o=s(887),i=s(842),r=s(873),n=s(565),a=s(385),c=s(100),l=s(470),h=s(678),p=s(128),d=s(564),u=s(95);class f extends Error{constructor(){super("Only the following platforms are supported: Linux, MacOS, Windows"),Object.setPrototypeOf(this,new.target.prototype)}}e.UnsupportedPlatformError=f;class m extends Error{constructor(){super(`At least NodeJS v17 is required! You are using ${process.version}`),Object.setPrototypeOf(this,new.target.prototype)}}e.UnsupportedNodeVersionError=m;class g extends Error{constructor(t){super(`Write test failed: ${t}`),Object.setPrototypeOf(this,new.target.prototype)}}e.WriteTestError=g;class S extends Error{constructor(t){super(`Read test failed: ${t}`),Object.setPrototypeOf(this,new.target.prototype)}}e.ReadTestError=S;class w extends Error{constructor(t){super(`Cross test failed: ${t}`),Object.setPrototypeOf(this,new.target.prototype)}}e.CrossTestError=w;class v extends Error{constructor(){super("Aborted"),Object.setPrototypeOf(this,new.target.prototype)}}e.AbortedError=v,e.Main=class{constructor(){this.args=new n.CliArgs({test:{positionals:{0:{name:"device",parse:t=>t}},options:{mode:{short:"m",parse:t=>t,default:"wr",validate:t=>{if(["r","w","wr","x"].indexOf(t)<0)return"Invalid mode:"+t+". Supported modes: wr, w, r, x"}},"output-mode":{short:"o",parse:t=>t,default:()=>"linux"===process.platform||"darwin"===process.platform?"direct":"win32"===process.platform?"dsync":"normal",validate:t=>["direct","dsync","normal"].indexOf(t)<0?"Invalid output-mode:"+t:"win32"===process.platform&&"direct"===t?"Direct mode not supported on Windows!":void 0},"chunk-size":{short:"c",default:4194304,parse:this.parseSize,validate:t=>isNaN(t)?"Specified chunk size is not a number!":"direct"===this.args.getOption("test","output-mode")&&t%512!=0?"In direct mode chunk size must be a multiple of 512!":void 0},"stripe-size":{short:"t",default:1073741824,parse:this.parseSize,validate:t=>isNaN(t)?"Specified stripe size is not a number!":"x"!==this.args.getOption("test","mode")?"Stripe size can only be set for cross tests!":void 0},start:{short:"s",parse:this.parseSize,validate:t=>isNaN(t)?"Specified start offset is not a number!":"direct"===this.args.getOption("test","output-mode")&&t%512!=0?"In direct mode 'start' must be a multiple of 512!":void 0}}},devices:{positionals:{},options:{}}})}parseSize(t){let e=1;return t.match(/[KMG]$/)&&(e=t.endsWith("K")?1024:t.endsWith("M")?1048576:1073741824,t=t.slice(0,-1)),e*Number(t)}async runModeDevices(){const t=await i.BlockDeviceInfo.loadAll();for(const e of t)console.log("-------------------------------------------------------------------------------"),console.log("Device:",e.name),e.sn&&console.log("Serial:",e.sn),console.log("Path:  ",e.path),console.log("Size:  ",(0,a.formatSize)(e.size),"("+e.size+" B)");console.log("-------------------------------------------------------------------------------")}async runModeTest(){const t=await i.BlockDeviceInfo.load(this.args.getPosition("test",0));console.log("-------------------------------------------------------------------------------"),console.log("Device:",t.name),t.sn&&console.log("Serial:",t.sn),console.log("Path:  ",t.path),console.log("Size:  ",(0,a.formatSize)(t.size),"("+t.size+" B)"),console.log("-------------------------------------------------------------------------------"),console.log("ATTENTION: USE AT YOUR OWN RISK!"),console.log("-------------------------------------------------------------------------------"),console.log("Will perform",{w:"write",r:"read",wr:"write and read",x:"cross (write and read)"}[this.args.getOption("test","mode")],"test."),"w"!==this.args.getOption("test","mode")&&"wr"!==this.args.getOption("test","mode")&&"x"!==this.args.getOption("test","mode")||console.log("All data on the device will be deleted!");const e=(0,o.createInterface)(process.stdin,process.stdout),s=await e.question("Do you want to proceed? (type uppercase YES) > ");if(e.close(),"YES"!==s)throw new v;const n=new r.BlockDeviceTest(t,{startAt:this.args.getOption("test","start"),openMode:this.args.getOption("test","output-mode"),ioChunkSize:this.args.getOption("test","chunk-size")}),f=new h.ConsoleSpeedMeter("  ","x"===this.args.getOption("test","mode"));if(n.on("bytes-processed",(t=>{f.addBytes(t)})),n.on("state",(t=>{f.setState(t)})),"w"===this.args.getOption("test","mode")||"r"===this.args.getOption("test","mode")||"wr"===this.args.getOption("test","mode")){const e=Math.min(Math.floor(t.size/2),104857600),s=d.RepeatedRandomDataProvider.create(e),o=u.RepeatedRandomDataVerifier.create(e);if("w"===this.args.getOption("test","mode")||"wr"===this.args.getOption("test","mode")){console.log("Writing test data ..."),f.start(n.testSize);try{await n.writeTestData(s),f.stop()}catch(t){throw f.stop(),new g(t.message)}}if("r"===this.args.getOption("test","mode")||"wr"===this.args.getOption("test","mode")){console.log("Verifying test data ..."),f.start(n.testSize);try{await n.readTestData(o),f.stop()}catch(t){throw f.stop(),new S(t.message)}}}if("x"===this.args.getOption("test","mode")){const t=[170,85],e=new c.Log2Jumps,s=new l.BafJumps,o=t.map((t=>p.RepeatedPatternDataProvider.create(this.args.getOption("test","chunk-size"),t)));console.log("Run cross-test using a chunk size of "+(0,a.formatSize)(this.args.getOption("test","chunk-size"))+" and patterns "+o.map((t=>t.pattern)).join(", ")+" ..."),f.start(n.testSize*t.length*2);try{await n.crossTestData(o,[e,s],this.args.getOption("test","stripe-size")),f.stop()}catch(t){throw f.stop(),new w(t.message)}}console.log("Done")}async run(t){if(["darwin","linux","win32"].indexOf(process.platform)<0)throw new f;const e=process.versions.node.match(/^(\d+)\..*/);if(!e||Number(e[1])<17)throw new m;this.args.parse(t),"devices"===this.args.mode?await this.runModeDevices():await this.runModeTest()}}},678:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ConsoleSpeedMeter=void 0;const o=s(326),i=s(385);class r extends o.SpeedMeterBase{constructor(t,e){super(),this.indent=t,this.showState=e,this.out=process.stdout}printStats(){this.statsPrinted&&(this.showState&&(this.out.clearLine(0),this.out.moveCursor(0,-1)),this.out.clearLine(0),this.out.moveCursor(0,-1),this.out.clearLine(0),this.out.moveCursor(0,-1),this.out.clearLine(0),this.out.moveCursor(0,-1),this.out.clearLine(0),this.out.moveCursor(0,-1),this.out.clearLine(0));const t=this.getStats();this.out.write(this.indent+"Speed:     [CUR] "+(0,i.padLeftDecimal)((0,i.formatSize)(t.curSpeed??0),3)+"/s   [AVG] "+(0,i.padLeftDecimal)((0,i.formatSize)(t.avgSpeed??0),3)+"/s   [MIN] "+(0,i.padLeftDecimal)((0,i.formatSize)(t.minSpeed??0),3)+"/s   [MAX] "+(0,i.padLeftDecimal)((0,i.formatSize)(t.maxSpeed??0),3)+"/s\n"),this.out.write(this.indent+"Progress:  "+(0,i.twoDecimalPlaces)(t.bytesSumTotal/t.size*100)+" %   ("+t.bytesSumTotal+" B = "+(0,i.formatSize)(t.bytesSumTotal)+")\n"),this.showState&&this.out.write(this.indent+"State:     "+(this.state||"")+"\n"),this.out.write(this.indent+"Elapsed:   "+(0,i.formatTime)(t.secondsElapsed??0)+"\n"),this.out.write(this.indent+"Remaining: "+(0,i.formatTime)(t.secondsRemaining??0)+"\n"),this.statsPrinted=!0}start(t){super.start(t),this.statsPrinted=!1,this.interval=setInterval((()=>{const t=process.hrtime.bigint();this.updateStats(t),this.printStats()}),500)}setState(t){this.state=t}stop(){clearInterval(this.interval),this.printStats()}}e.ConsoleSpeedMeter=r},488:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ProgressSnapshots=void 0;const o=s(915);e.ProgressSnapshots=class{constructor(){this.list=[]}clear(t){this.updateSnapshotList([{bytesTotal:0,at:t}])}add(t,e){const s={bytesTotal:e,at:t},i=t-this.list[this.list.length-1].at;if(this.list.length>=2){const t=this.list[this.list.length-2];this.list[this.list.length-1].at-t.at<o.MS_100?this.replaceLastSnapshot(s):this.addSnapshot(s)}else this.addSnapshot(s);return this.removeOutdated(),i}getLastDurationStats(){const t=this.list[this.list.length-1];if(this.list.length>1)return void 0===this.cachedLastDurationStats&&(this.cachedLastDurationStats={duration:t.at-this.list[0].at,bytesTotal:t.bytesTotal-this.list[0].bytesTotal}),this.cachedLastDurationStats}updateSnapshotList(t){this.list=t,this.cachedLastDurationStats=void 0}addSnapshot(t){this.list.push(t),this.cachedLastDurationStats=void 0}replaceLastSnapshot(t){this.list[this.list.length-1]=t,this.cachedLastDurationStats=void 0}removeOutdated(){const t=this.list[this.list.length-1];for(let e=0;e<this.list.length;e++){const s=this.list[e];if(t.at-s.at<o.MS_1000){e>1&&this.updateSnapshotList(this.list.slice(e-1));break}}}}},326:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SpeedMeterBase=void 0;const o=s(673),i=s(488),r=s(915);e.SpeedMeterBase=class extends o{constructor(){super(...arguments),this.progressSnapshots=new i.ProgressSnapshots}updateStats(t){const e=t-this.startTime;this.secondsElapsed=Math.floor(Number(e/1000000000n));const s=this.progressSnapshots.getLastDurationStats();void 0!==this.lastDurationStats&&this.lastDurationStats===s||(this.lastDurationStats=s,void 0!==s&&s.duration>=r.MS_1000&&(this.curSpeed=Number(1000000000n*BigInt(s.bytesTotal)/s.duration),this.minSpeed=void 0===this.minSpeed?this.curSpeed:Math.min(this.curSpeed,this.minSpeed),this.maxSpeed=void 0===this.maxSpeed?this.curSpeed:Math.max(this.curSpeed,this.maxSpeed),this.avgSpeed=Number(1000000000n*BigInt(this.bytesSumTotal)/e),this.secondsRemaining=Math.ceil((this.size-this.bytesSumTotal)/this.curSpeed)))}getStats(){return{bytesSumTotal:this.bytesSumTotal,size:this.size,curSpeed:this.curSpeed,minSpeed:this.minSpeed,maxSpeed:this.maxSpeed,avgSpeed:this.avgSpeed,secondsElapsed:this.secondsElapsed,secondsRemaining:this.secondsRemaining}}start(t){this.startTime=process.hrtime.bigint(),this.progressSnapshots.clear(this.startTime),this.bytesSumTotal=0,this.size=t,this.curSpeed=void 0,this.avgSpeed=void 0,this.minSpeed=void 0,this.maxSpeed=void 0,this.secondsElapsed=void 0,this.secondsRemaining=void 0}addBytes(t){if(t<1)return;const e=process.hrtime.bigint();this.bytesSumTotal+=t;const s=this.progressSnapshots.add(e,this.bytesSumTotal);s>r.MS_1000&&this.emit("longOperation",s,t),this.updateStats(e)}}},742:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RepeatedDataProvider=void 0,e.RepeatedDataProvider=class{constructor(t){this.dataPool=t,this.pos=0,this.poolSize=t.length}incPos(t){this.pos=(this.pos+t)%this.poolSize}getDataPool(){return this.dataPool}fillBuffer(t,e){let s=0;for(;s<e;){const o=Math.min(e-s,this.poolSize-this.pos);this.dataPool.copy(t,s,this.pos,this.pos+o),s+=o,this.incPos(o)}}}},128:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RepeatedPatternDataProvider=void 0;const o=s(742);class i extends o.RepeatedDataProvider{constructor(t,e){super(t),this.pattern=e}static create(t,e){const s=Buffer.alloc(t,e);return new i(s,"0x"+e.toString(16).toUpperCase())}}e.RepeatedPatternDataProvider=i},906:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RepeatedPatternDataVerifier=void 0;class s{constructor(t){this.verifyData=t,this.pos=0,this.poolSize=t.length}static create(t){return new s(t.getDataPool())}incPos(t){this.pos=(this.pos+t)%this.poolSize}verify(t,e){let s=0;for(;s<e;){const o=Math.min(this.poolSize-this.pos,e-s);if(0!==t.compare(this.verifyData,this.pos,this.pos+o,s,s+o))throw new Error("Mismatch!");s+=o,this.incPos(o)}}}e.RepeatedPatternDataVerifier=s},564:(t,e,s)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RepeatedRandomDataProvider=void 0;const o=s(5),i=s(742);class r extends i.RepeatedDataProvider{constructor(t){super(t)}static create(t){const e=Buffer.allocUnsafe(t);return(0,o.randomFillSync)(e),new r(e)}}e.RepeatedRandomDataProvider=r},95:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RepeatedRandomDataVerifier=void 0;class s{constructor(t){this.verifyDataSize=t,this.pos=0,this.verifyDataFilled=!1}static create(t){const e=new s(t);return e.verifyData=Buffer.allocUnsafe(t),e}incPos(t){this.pos=(this.pos+t)%this.verifyDataSize}verify(t,e){if(!this.verifyDataFilled){const s=Math.min(this.verifyDataSize-this.pos,e);if(t.copy(this.verifyData,this.pos,0,s),this.incPos(s),this.verifyDataFilled=0===this.pos,e===s)return;t=t.subarray(s),e-=s}let s=0;for(;s<e;){const o=Math.min(this.verifyDataSize-this.pos,e-s);if(0!==t.compare(this.verifyData,this.pos,this.pos+o,s,s+o))throw new Error("Mismatch!");s+=o,this.incPos(o)}}}e.RepeatedRandomDataVerifier=s},718:t=>{t.exports=require("node:child_process")},5:t=>{t.exports=require("node:crypto")},673:t=>{t.exports=require("node:events")},561:t=>{t.exports=require("node:fs")},977:t=>{t.exports=require("node:fs/promises")},887:t=>{t.exports=require("node:readline/promises")}},e={};function s(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return t[o](r,r.exports,s),r.exports}(()=>{const t=s(565),e=s(24),o=[[e.UnsupportedNodeVersionError,2],[e.UnsupportedPlatformError,3],[t.CliArgsError,4],[e.AbortedError,5],[e.WriteTestError,6],[e.ReadTestError,7],[e.CrossTestError,8]];(async()=>{try{await(new e.Main).run(process.argv.slice(2))}catch(t){console.log(t.message);for(const[e,s]of o)t instanceof e&&process.exit(s);process.exit(1)}})()})()})();